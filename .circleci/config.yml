version: 2

defaults: &defaults
  working_directory: ~/project
  docker:
    - image: circleci/python:3.7.9

prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      python3 -m venv venv
      source venv/bin/activate
      python3 -m pip install --upgrade pip

jobs:
  test_lasso_model:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run:
          name: Runnning ML model tests
          command: |
            python3 -m pip install -r packages/lasso/requirements.txt
            PYTHONPATH='./packages/lasso' python3 packages/lasso/lasso/train.py
            pytest -s packages/lasso/tests

  test_ml_api:
    <<: *defaults
    steps:
      - checkout
      # - restore_cache:
      #     key: 
      #       deps-py-{{ checksum "packages/ml-app/requirements.txt" }}
      - *prepare_venv
      - run:
          name: Train model
          command: |
            python3 -m pip install -r packages/lasso/requirements.txt
            PYTHONPATH='./packages/lasso' python3 packages/lasso/lasso/train.py
      - run:
          name: Running API tests
          command: |
            python3 -m pip install -r packages/ml-app/requirements.txt
            export PYTHONPATH=$PYTHONPATH:'./packages/ml-app'
            pytest -s packages/ml-app/tests -m "not differential"
      # - save_cache:
      #     paths:
      #       - "venv/"
      #     key: 
      #       deps-py-{{ checksum "packages/ml-app/requirements.txt" }}

  test_diff:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - setup_remote_docker:
          docker_layer_caching: false
          version: 19.03.13
      - run:
          name: Train model
          command: |
            python3 -m pip install -r packages/lasso/requirements.txt
            PYTHONPATH='./packages/lasso' python3 packages/lasso/lasso/train.py
      - run:
          name: Capture prev version predictions
          command: |
            python3 -m pip install -r packages/ml-app/diff_requirements.txt
            export PYTHONPATH=$PYTHONPATH:'./packages/ml-app'
            python3 packages/ml-app/tests/capture_pred.py

      - run:
          name: Compare current version predictions with capture prev
          command: |
            python3 -m pip install -r packages/ml-app/requirements.txt
            pytest -s packages/ml-app/tests -m "differential"
            
  train_and_publish_model:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run:
          name: Train model
          command: |
            python3 -m pip install -r packages/lasso/requirements.txt
            PYTHONPATH='./packages/lasso' python3 packages/lasso/lasso/train.py

      - run:
          name: Publish model
          command: |
            ./scripts/publish_model.sh packages/lasso

  deploy_to_heroku_using_docker:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv

      - run: 
          name: Prepare docker
          command: |
            docker login --username=$HEROKU_EMAIL --password=$HEROKU_API_KEY registry.heroku.com
            curl https://cli-assets.heroku.com/install-ubuntu.sh | sh

      - run:
          name: Train model
          command: |
            python3 -m pip install -r packages/lasso/requirements.txt
            PYTHONPATH='./packages/lasso' python3 packages/lasso/lasso/train.py

      - run:
          name: Install API deps with ml locally
          command: |
            python3 -m pip install -r packages/ml-app/requirements.txt

      - run: 
          name: Build and Push Image
          command: |
            make build-docker-mlapi push-docker-mlapi

      - run:
          name: Release docker
          command: |
            heroku container:release web --app $HEROKU_APP_NAME


  deploy_to_heroku:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run:
          name: Train model
          command: |
            python3 -m pip install -r packages/lasso/requirements.txt
            PYTHONPATH='./packages/lasso' python3 packages/lasso/lasso/train.py

      - run:
          name: Install API deps with ml locally
          command: |
            python3 -m pip install -r packages/ml-app/requirements.txt

      - run:
          name: Deploy to heroku
          command: |
            git push https://heroku:${HEROKU_API_KEY}@git.heroku.com/${HEROKU_APP_NAME}.git main

workflows:
  version: 2
  test-all:
    jobs:
      - test_lasso_model
      - test_ml_api
      - test_diff
      - train_and_publish_model:
          requires:
            - test_lasso_model
            - test_ml_api
            - test_diff
          filters:
            branches:
              only:
                - main
      - deploy_to_heroku_using_docker:
          requires:
            - train_and_publish_model
          filters:
            branches:
              only:
                - main
      # - deploy_to_heroku:
      #     requires:
      #       - train_and_publish_model
      #     filters:
      #       branches:
      #         only:
      #           - main
